const blockOriginal=require("./block"),AWS=require("aws-sdk"),http=require("http"),fs=require("fs"),db=new AWS.DynamoDB.DocumentClient({region:process.env.AWS_REGION}),cognito=new AWS.CognitoIdentityServiceProvider({region:process.env.AWS_REGION}),eventbridge=new AWS.EventBridge({region:process.env.AWS_REGION});let block=blockOriginal;const getModules=()=>{try{return fs.readdirSync("./modules",{withFileTypes:!0}).filter((e=>e.isDirectory())).map((e=>e.name))}catch(e){return[]}},folders=getModules();for(const e of folders){const t=require("./modules/"+e+"/rise.js");t.code.Query&&(block.code.Query={...block.code.Query,...t.code.Query}),t.code.Mutation&&(block.code.Mutation={...block.code.Mutation,...t.code.Mutation}),t.code.Events&&(block.code.Events={...block.code.Events,...t.code.Events})}const crypto=require("crypto"),byteToHex=[];for(let e=0;e<256;++e)byteToHex.push((e+256).toString(16).substr(1));function bytesToUuid(e,t){const i=t||0;return(byteToHex[e[i+0]]+byteToHex[e[i+1]]+byteToHex[e[i+2]]+byteToHex[e[i+3]]+"-"+byteToHex[e[i+4]]+byteToHex[e[i+5]]+"-"+byteToHex[e[i+6]]+byteToHex[e[i+7]]+"-"+byteToHex[e[i+8]]+byteToHex[e[i+9]]+"-"+byteToHex[e[i+10]]+byteToHex[e[i+11]]+byteToHex[e[i+12]]+byteToHex[e[i+13]]+byteToHex[e[i+14]]+byteToHex[e[i+15]]).toLowerCase()}function rng(){const e=new Uint8Array(16);return crypto.randomFillSync(e)}function uuid(e,t,i){const r=(e=e||{}).random||(e.rng||rng)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){i=i||0;for(let e=0;e<16;++e)t[i+e]=r[e];return t}return bytesToUuid(r)}function formatKeys(e){let t=e;return t.pk&&(t.pk=t.pk.toString()),t.sk&&(t.sk=t.sk.toString()),t.pk2&&(t.pk2=t.pk2.toString()),t.pk3&&(t.pk3=t.pk3.toString()),"@id"!==t.pk&&t.pk.includes("@id")&&(t.pk=t.pk.replace("@id",uuid())),"@id"===t.pk&&(t.pk=uuid()),"@id"!==t.sk&&t.sk.includes("@id")&&(t.sk=t.sk.replace("@id",uuid())),"@id"===t.sk&&(t.sk=uuid()),t.pk2&&"@id"!==t.pk2&&t.pk2.includes("@id")&&(t.pk2=t.pk2.replace("@id",uuid())),"@id"===t.pk2&&(t.pk2=uuid()),t.pk3&&"@id"!==t.pk3&&t.pk3.includes("@id")&&(t.pk3=t.pk3.replace("@id",uuid())),"@id"===t.pk3&&(t.pk3=uuid()),t}function makePass(){const e=(e,t)=>{const i=Math.floor(10*Math.random())+1,r=e.split("");return r.splice(i,0,t),r.join("")},t=e(uuid().split("-").join("").slice(0,10),"C");return e(t,"!")}const createUser=async({email:e,userPoolId:t})=>{if(!e)throw new Error("CreateUser must have an email defined");const i=makePass(),r={UserPoolId:t,Username:e,TemporaryPassword:i,MessageAction:"SUPPRESS",UserAttributes:[{Name:"name",Value:e},{Name:"email",Value:e},{Name:"email_verified",Value:"True"}]};try{return await cognito.adminCreateUser(r).promise(),{email:e,password:i}}catch(e){throw new Error(e)}},removeUser=async({email:e,userPoolId:t})=>{if(!e)throw new Error("RemoveUser must have an email defined");const i={UserPoolId:t,Username:e};try{return await cognito.adminDeleteUser(i).promise(),!0}catch(e){throw new Error(e)}},hasUserUsedTemporaryPassword=async({email:e,userPoolId:t})=>{const i={UserPoolId:t,Username:e};return"FORCE_CHANGE_PASSWORD"!==(await cognito.adminGetUser(i).promise()).UserStatus},resetPassword=async({email:e,userPoolId:t})=>{if(!e)throw new Error("ResetPassword must have an email defined");return!await hasUserUsedTemporaryPassword({email:e,userPoolId:t})&&(await deleteUser({email:e,userPoolId:t}),await createUser({email:e,userPoolId:t}))},rise=({qlType:e,qlField:t,table:i,userPoolId:r})=>{const s=async r=>{if("db"!==r.type&&"log"!==r.type&&"logError"!==r.type)return r.input;if("log"===r.type)return void console.log(JSON.stringify({pltfm:"RISE",app:i,field:`${e}__${t}`,log:r.message,type:"info"}));if("logError"===r.type)return void console.log(JSON.stringify({pltfm:"RISE",app:i,field:`${e}__${t}`,log:r.error.message,stack:r.error.stack,type:"error"}));const s={action:r.action,table:i},o=formatKeys(r.input);if("create"===s.action)return await db.put({TableName:s.table,Item:o}).promise(),o;if("get"===s.action){let e={pk:o.pk,sk:o.sk};o.pk2&&(e={pk2:o.pk2,sk:o.sk}),o.pk3&&(e={pk3:o.pk3,sk:o.sk});return(await db.get({TableName:s.table,Key:e}).promise()).Item||!1}if("list"===s.action){let e={};o.pk&&(e={TableName:s.table,KeyConditionExpression:"pk = :pk AND begins_with(sk, :sk)",ExpressionAttributeValues:{":pk":o.pk,":sk":o.sk}}),o.pk2&&(e={TableName:s.table,IndexName:"pk2",KeyConditionExpression:"pk2 = :gsi AND begins_with(sk, :sk)",ExpressionAttributeValues:{":gsi":o.pk2,":sk":o.sk}}),o.pk3&&(e={TableName:s.table,IndexName:"pk3",KeyConditionExpression:"pk3 = :gsi AND begins_with(sk, :sk)",ExpressionAttributeValues:{":gsi":o.pk3,":sk":o.sk}});return(await db.query(e).promise()).Items}if("remove"===s.action)return await db.delete({TableName:s.table,Key:{pk:o.pk,sk:o.sk}}).promise(),o;throw new Error("DB ACTION "+s.action+", table: "+s.table)};return s.log=r=>{console.log(JSON.stringify({pltfm:"RISE",app:i,field:`${e}__${t}`,log:r,type:"info"}))},s.db={create:async e=>{const t=formatKeys(e);return await db.put({TableName:i,Item:t}).promise(),t},get:async e=>{let t={pk:e.pk,sk:e.sk};e.pk2&&(t={pk2:e.pk2,sk:e.sk}),e.pk3&&(t={pk3:e.pk3,sk:e.sk});return(await db.get({TableName:i,Key:t}).promise()).Item||!1},list:async e=>{let t={};e.pk&&(t={TableName:i,KeyConditionExpression:"pk = :pk AND begins_with(sk, :sk)",ExpressionAttributeValues:{":pk":e.pk,":sk":e.sk}}),e.pk2&&(t={TableName:i,IndexName:"pk2",KeyConditionExpression:"pk2 = :gsi AND begins_with(sk, :sk)",ExpressionAttributeValues:{":gsi":e.pk2,":sk":e.sk}}),e.pk3&&(t={TableName:i,IndexName:"pk3",KeyConditionExpression:"pk3 = :gsi AND begins_with(sk, :sk)",ExpressionAttributeValues:{":gsi":e.pk3,":sk":e.sk}});return(await db.query(t).promise()).Items},remove:async e=>(await db.delete({TableName:i,Key:{pk:e.pk,sk:e.sk}}).promise(),e)},s.events={emit:async e=>{if(e.length>10)throw new Error("Event Bridge cannot publish more than 10 events at a time");Array.isArray(e)||(e=[e]);const t={Entries:e.map((e=>({Source:"custom."+i,EventBusName:i,DetailType:e.event,Time:new Date,Detail:JSON.stringify(e.data)})))};await eventbridge.putEvents(t).promise()}},s.users={create:async e=>await createUser({email:e,userPoolId:r}),remove:async e=>await removeUser({email:e,userPoolId:r}),resetPassword:async e=>await resetPassword({email:e,userPoolId:r})},s},mainFunction=async({path:e,input:t,identity:i,action:r,arrayIndex:s})=>{let o=t.input?t.input:t;if(o=t.source&&"rise-event"===t.source?t.detail:o,o=formatKeys(o),r.pk&&r.pk.includes("!")){const e=r.pk.split("!"),t=e[0],s=e[1].split(".");r.pk=t+s.reduce(((e,t)=>e[t]),i)}if(r.sk&&r.sk.includes("!")){const e=r.sk.split("!"),t=e[0],s=e[1].split(".");r.sk=t+s.reduce(((e,t)=>e[t]),i)}if(r.pk2&&r.pk2.includes("!")){const e=r.pk2.split("!"),t=e[0],s=e[1].split(".");r.pk2=t+s.reduce(((e,t)=>e[t]),i)}if(r.pk3&&r.pk3.includes("!")){const e=r.pk3.split("!"),t=e[0],s=e[1].split(".");r.pk3=t+s.reduce(((e,t)=>e[t]),i)}if(r.pk&&r.pk.includes("$")){const e=r.pk.split("$"),t=e[0],i=e[1].split(".");r.pk=t+i.reduce(((e,t)=>e[t]),o)}if(r.sk&&r.sk.includes("$")){const e=r.sk.split("$"),t=e[0],i=e[1].split(".");r.sk=t+i.reduce(((e,t)=>e[t]),o)}if(Array.isArray(r)&&!s){let t=0,s=o,a=r;for(const r of a)s=await mainFunction({path:e,input:s,identity:i,action:r,arrayIndex:t}),t++;return s}if(Array.isArray(r)&&(0===s||s))throw new Error("Cannot have an array within an array for actions");if("user"===r.type){if(r.email&&r.email.includes("$")){const e=r.email.split("$"),t=e[0],i=e[1].split(".");r.email=t+i.reduce(((e,t)=>e[t]),o)}if("create"===r.action){if(!r.email)throw new Error("Create user must have an email defined");const e=await createUser({email:r.email,userPoolId:r.userpoolId});return{...o,user:e}}if("resetPassword"===r.action){if(!r.email)throw new Error("Create user must have an email defined");const e=await resetPassword({email:r.email,userPoolId:r.userpoolId});return{...o,user:e}}if("remove"===r.action){if(!r.email)throw new Error("Create user must have an email defined");return await removeUser({email:r.email,userPoolId:r.userpoolId}),{...o,user:{email:r.email,password:!1}}}}if("db"===r.type){if("create"===r.action){let e={...o};return await db.put({TableName:r.table,Item:e}).promise(),{...e}}if("get"===r.action){let e={pk:o.pk,sk:o.sk};o.pk2&&(e={pk2:o.pk2,sk:o.sk}),o.pk3&&(e={pk3:o.pk3,sk:o.sk});return(await db.get({TableName:r.table,Key:e}).promise()).Item||!1}if("list"===r.action){let e={};o.pk&&(e={TableName:r.table,KeyConditionExpression:"pk = :pk AND begins_with(sk, :sk)",ExpressionAttributeValues:{":pk":o.pk,":sk":o.sk}}),o.pk2&&(e={TableName:r.table,IndexName:"pk2",KeyConditionExpression:"pk2 = :gsi AND begins_with(sk, :sk)",ExpressionAttributeValues:{":gsi":o.pk2,":sk":o.sk}}),o.pk3&&(e={TableName:r.table,IndexName:"pk3",KeyConditionExpression:"pk3 = :gsi AND begins_with(sk, :sk)",ExpressionAttributeValues:{":gsi":o.pk3,":sk":o.sk}});return(await db.query(e).promise()).Items}if("remove"===r.action)return await db.delete({TableName:r.table,Key:{pk:o.pk,sk:o.sk}}).promise(),o;throw new Error("DB ACTION "+r.action+", table: "+r.table)}if("guard"===r.type){if((await db.get({TableName:r.table,Key:{pk:r.pk,sk:r.sk}}).promise()).Item)return o;throw new Error("Unauthorized")}if("add"===r.type)return delete r.type,Object.keys(r).forEach((e=>{if(r[e].startsWith("!")){const t=r[e].slice(1);o[e]=i[t]}else if(r[e].startsWith("$")){const t=r[e].slice(1);o[e]=o[t]}else o[e]=r[e]})),o;if("http"===r.type)throw new Error("HTTP URL "+r.url);if("function"===r.type)try{if(!1!==s){return await block.code[e.type][e.field][s](t,rise({table:r.table,userPoolId:r.userPoolId,qlType:e.type,qlField:e.field}),i)}return await block.code[e.type][e.field](t,rise({table:r.table,userPoolId:r.userpoolId,qlType:e.type,qlField:e.field}),i)}catch(t){throw console.log(JSON.stringify({pltfm:"RISE",app:r.table,field:`${e.type}__${e.field}`,log:t.message,type:"error",stack:t.stack})),new Error(t)}throw new Error("Unsupported action")};module.exports.handler=async e=>{"string"==typeof e&&(e=JSON.parse(e));if("rise-event"===e.source){console.log("event triggered",e);const t={path:{type:"Events",field:e.field},input:e.detail,identity:{id:!1,email:!1,ip:!1},action:e.action,arrayIndex:!1};return await mainFunction(t)}const t={type:e.ctx.info.parentTypeName,field:e.ctx.info.fieldName},i=e.ctx.arguments,r={source:!!e.ctx.identity&&e.ctx.identity.claims.iss,id:!!e.ctx.identity&&e.ctx.identity.claims.sub,email:!!e.ctx.identity&&e.ctx.identity.claims.email,ip:!(!e.ctx.identity||!e.ctx.identity.sourceIp)&&e.ctx.identity.sourceIp[0]},s=e.action;return await mainFunction({path:t,input:i,identity:r,action:s,arrayIndex:!1})};